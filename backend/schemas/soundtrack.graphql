type Soundtrack {
  id: ID!
  title: String!
  author: String!
  duration: Int!
  coverURL: String
  audioURL: String!
  validated: Boolean!
  creatorId: String! @hasRole(role: ADMIN)
  createdAt: Date!
}

union SoundtrackResult = Soundtrack | NotFound

extend type Query {
  soundtrack(id: ID!): SoundtrackResult
  soundtracks(filter: SoundtracksFilter!): SoundtracksResponse!
  soundtrackByName(name: String!): [Soundtrack!]!
}

extend type Mutation {
  addSoundtrack(input: AddSoundtrackInput!): Boolean!
  deleteSoundtrack(id: ID!): Boolean! @hasRole(role: [ADMIN])
}

input SoundtracksFilter {
  page: Int!
}

type SoundtracksResponse {
  soundtracks: [Soundtrack!]!
}

input AddSoundtrackInput {
  title: String!
  author: String!
  coverImage: Upload
  audiofile: Upload!
}
